<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.lastwhisper.mybatiscrud.dao.UserMapper">
    <!--
        id 标签：用于指定主键字段
        result 标签：用于指定非主键字段
        column 属性：用于指定数据库列名
        property 属性：用于指定实体类属性名称
    -->
    <resultMap type="user" id="userMap">
        <id column="id" property="userId"/>
        <result column="username" property="userName"/>
        <result column="sex" property="userSex"/>
        <result column="address" property="userAddress"/>
        <result column="birthday" property="userBirthday"/>
    </resultMap>

    <!--
        resultType 属性：
            用于指定结果集的类型。
        parameterType 属性：
            用于指定传入参数的类型。
        #{}占位符，相当于原来 jdbc 的?
    -->
    <!-- 根据 id 查询 -->
    <select id="findById" resultType="user">
        select * from user where id = #{uid}
    </select>


    <!-- 保存用户 -->
    <insert id="saveUser" parameterType="user">
        <!-- 配置保存时获取插入的 id -->
        <selectKey keyColumn="id" keyProperty="id" resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user(username,birthday,sex,address)
        values(#{username},#{birthday},#{sex},#{address})
    </insert>

    <!-- 更新用户 -->
    <update id="updateUser" parameterType="user">
        update user set username=#{username},birthday=#{birthday},sex=#{sex},
        address=#{address} where id=#{id}
    </update>

    <!-- 删除用户 -->
    <delete id="deleteUser" parameterType="java.lang.Integer">
        delete from user where id = #{uid}
    </delete>

    <!-- 根据名称模糊查询 -->
    <select id="findLikeByName" resultType="user" parameterType="string">
        select * from user where username like #{username}
    </select>

    <!-- 根据名称模糊查询 -->
    <select id="findLikeByName2" resultType="user" parameterType="string">
        select * from user where username like '%${value}%'
    </select>

    <!-- 查询总记录条数 -->
    <select id="findTotal" resultType="int">
        select count(*) from user;
    </select>

    <!-- 根据用户名称模糊查询，参数变成一个 QueryVo 对象了 -->
    <select id="findUserByVo" resultType="user"
            parameterType="QueryVo">
        select * from user where username like #{user.username};
    </select>


    <!-- 配置查询所有操作，字段与数据库不对应，使用别名查询 -->
    <select id="findAll" resultType="user">
        select id as userId,username as userName,birthday as userBirthday,
            sex as userSex,address as userAddress from user
    </select>

    <select id="findAll2" resultMap="userMap">
        select * from user
    </select>

</mapper>